<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<ImplicitUsings>enable</ImplicitUsings>

		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>true</BuildServerSideRenderer>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Autofac" Version="7.1.0" />
		<PackageReference Include="Autofac.Extensions.DependencyInjection" Version="7.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.33" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.1" />
		<PackageReference Include="MintPlayer.AspNetCore.Hsts" Version="6.0.0" />
		<PackageReference Include="MintPlayer.AspNetCore.SpaServices.Routing" Version="6.0.4" />
		<PackageReference Include="WebMarkupMin.AspNetCore6" Version="2.17.0" />
		<PackageReference Include="WebMarkupMin.Core" Version="2.17.0" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="ClientApp\tsconfig.app.json" />
	  <None Remove="ClientApp\tsconfig.json" />
	  <None Remove="ClientApp\tsconfig.server.json" />
	  <None Remove="ClientApp\tsconfig.spec.json" />
	</ItemGroup>

	<ItemGroup>
	  <Content Include="ClientApp\tsconfig.app.json" />
	  <Content Include="ClientApp\tsconfig.json" />
	  <Content Include="ClientApp\tsconfig.server.json" />
	  <Content Include="ClientApp\tsconfig.spec.json" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="ClientApp\src\app\config\interfaces\" />
	  <Folder Include="ClientApp\src\app\stored\weather-forecast\models\request\" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\wms.infrastructure\wms.infrastructure.csproj" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --configuration production" Condition=" '$(BuildServerSideRenderer)' == 'false' " />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr:production" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>
